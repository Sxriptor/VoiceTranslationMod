declare const startButton: HTMLButtonElement;
declare const testButton: HTMLButtonElement;
declare const addVoiceButton: HTMLButtonElement;
declare const hearYourselfButton: HTMLButtonElement;
declare const virtualMicTestButton: HTMLButtonElement;
declare const settingsButton: HTMLButtonElement;
declare const refreshButton: HTMLButtonElement;
declare const microphoneSelect: HTMLSelectElement;
declare const languageSelect: HTMLSelectElement;
declare const voiceSelect: HTMLSelectElement;
declare const debugToggle: HTMLButtonElement;
declare const debugConsole: HTMLDivElement;
declare const debugOutput: HTMLDivElement;
declare const connectionStatus: HTMLSpanElement;
declare const processingStatus: HTMLSpanElement;
declare const statusIndicator: HTMLElement;
declare let isTranslating: boolean;
declare let isDebugVisible: boolean;
declare function initializeEventListeners(): void;
declare function toggleTranslation(): Promise<void>;
declare function testTranslation(): Promise<void>;
declare function openSettings(): Promise<void>;
declare function showApiKeyModal(apiKeys: any): void;
declare function toggleDebugConsole(): Promise<void>;
declare function onMicrophoneChange(): Promise<void>;
declare function onLanguageChange(): Promise<void>;
declare function onVoiceChange(): Promise<void>;
declare function refreshDevicesAndVoices(): Promise<void>;
declare function loadVoices(): Promise<void>;
declare function loadCustomVoices(): Promise<void>;
declare function initializeLanguageSelector(): Promise<void>;
declare function loadMicrophoneDevices(): Promise<void>;
declare function updateStatusIndicator(status?: string): void;
declare function logToDebug(message: string): void;
declare function updateApiKeys(apiKeys: any): Promise<void>;
declare function checkApiKeysConfiguration(): Promise<void>;
declare function setupTranslationStatusUpdates(): void;
declare function testHearYourself(): Promise<void>;
declare function testVirtualMicrophone(): Promise<void>;
declare function showAddVoiceModal(): Promise<void>;
declare function isValidVoiceId(voiceId: string): boolean;
declare function addCustomVoiceToList(voiceId: string, displayName: string): Promise<void>;
declare function saveCustomVoice(voiceId: string, displayName: string): Promise<void>;
declare function playAudioInRenderer(audioBufferArray: number[]): Promise<void>;
//# sourceMappingURL=renderer.d.ts.map