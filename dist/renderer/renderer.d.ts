declare const startButton: HTMLButtonElement;
declare const testButton: HTMLButtonElement;
declare const addVoiceButton: HTMLButtonElement;
declare const hearYourselfButton: HTMLButtonElement;
declare const virtualMicTestButton: HTMLButtonElement;
declare const outputToggleButton: HTMLButtonElement;
declare const settingsButton: HTMLButtonElement;
declare const refreshButton: HTMLButtonElement;
declare const liveTranslationPanel: HTMLDivElement;
declare const currentKeybindSpan: HTMLSpanElement;
declare const changeKeybindBtn: HTMLButtonElement;
declare const recordingIndicator: HTMLDivElement;
declare const recordingText: HTMLSpanElement;
declare const originalTextDiv: HTMLDivElement;
declare const translatedTextDiv: HTMLDivElement;
declare const microphoneSelect: HTMLSelectElement;
declare const languageSelect: HTMLSelectElement;
declare const voiceSelect: HTMLSelectElement;
declare const debugToggle: HTMLButtonElement;
declare const debugConsole: HTMLDivElement;
declare const debugOutput: HTMLDivElement;
declare const connectionStatus: HTMLSpanElement;
declare const processingStatus: HTMLSpanElement;
declare const statusIndicator: HTMLElement;
declare let isTranslating: boolean;
declare let isDebugVisible: boolean;
declare let isRecording: boolean;
declare let currentKeybind: string;
declare let mediaRecorder: MediaRecorder | null;
declare let audioStream: MediaStream | null;
declare let audioChunks: Blob[];
declare let isProcessingAudio: boolean;
declare let virtualOutputDeviceId: string | null;
declare let passThroughAudioEl: HTMLAudioElement | null;
declare let outputToVirtualDevice: boolean;
declare function setupRealTimeAudioPlayback(): void;
declare function setupTestAudioPlayback(): void;
declare function setupRealTimeTranslationAudio(): void;
declare function setupClearAudioCapture(): void;
declare function playTestAudio(audioData: number[], outputToHeadphones: boolean): Promise<void>;
declare function playRealTimeAudio(audioData: number[], outputToVirtualMic: boolean): Promise<void>;
declare function playRealTimeTranslationAudio(audioData: number[], outputToVirtualMic: boolean): Promise<void>;
declare function initializeEventListeners(): void;
declare function toggleTranslation(): Promise<void>;
declare function testTranslation(): Promise<void>;
declare function openSettings(): Promise<void>;
declare function showApiKeyModal(apiKeys: any): void;
declare function toggleDebugConsole(): Promise<void>;
declare function onMicrophoneChange(): Promise<void>;
declare function onLanguageChange(): Promise<void>;
declare function onVoiceChange(): Promise<void>;
declare function refreshDevicesAndVoices(): Promise<void>;
declare function loadVoices(): Promise<void>;
declare function loadCustomVoices(): Promise<void>;
declare function initializeLanguageSelector(): Promise<void>;
declare function loadMicrophoneDevices(): Promise<void>;
declare function updateStatusIndicator(status?: string): void;
declare function logToDebug(message: string): void;
declare function updateApiKeys(apiKeys: any): Promise<void>;
declare function checkApiKeysConfiguration(): Promise<void>;
declare function setupTranslationStatusUpdates(): void;
declare function testHearYourself(): Promise<void>;
declare function testVirtualMicrophone(): Promise<void>;
declare function showAddVoiceModal(): Promise<void>;
declare function isValidVoiceId(voiceId: string): boolean;
declare function addCustomVoiceToList(voiceId: string, displayName: string): Promise<void>;
declare function saveCustomVoice(voiceId: string, displayName: string): Promise<void>;
declare function playAudioInRenderer(audioBufferArray: number[]): Promise<void>;
declare function initializeRealTimeAudioStream(): Promise<void>;
declare function restartRealTimeAudioCapture(): Promise<void>;
declare function initializeAudioStream(): Promise<void>;
declare function cleanupAudioStream(): Promise<void>;
declare function handleKeyDown(event: KeyboardEvent): void;
declare function handleKeyUp(event: KeyboardEvent): void;
declare function startRecording(): Promise<void>;
declare function stopRecording(): Promise<void>;
declare function processRecordedAudio(): Promise<void>;
declare function speechToTextPushToTalk(audioBuffer: ArrayBuffer): Promise<string>;
declare function speechToText(audioBuffer: ArrayBuffer): Promise<string>;
declare function convertToWav(audioBlob: Blob): Promise<Blob>;
declare function translateText(text: string): Promise<string>;
declare function synthesizeAndPlay(text: string): Promise<void>;
declare function updateRecordingUI(isActive: boolean): void;
declare function showKeybindModal(): void;
declare function detectVirtualOutputDevice(): Promise<void>;
declare function startPassThrough(): Promise<void>;
declare function stopPassThrough(): Promise<void>;
declare function restoreOutputPreference(): Promise<void>;
declare function updateOutputToggleButton(): void;
declare function toggleOutputTarget(): Promise<void>;
//# sourceMappingURL=renderer.d.ts.map